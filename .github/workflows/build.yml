name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-20.04

    # https://tex.stackexchange.com/a/440271/2066
    # Try to create reproducible .pdfs

    strategy:
      matrix:
        env:
        - { EXCLUDE_REWRITING: "1", EXCLUDE_TARGET: "exclude-rewriting", SOURCE_DATE_EPOCH: "1", SOURCE_DATE_EPOCH_TEX_PRIMITIVES: "1" }
        - { EXCLUDE_REWRITING: "" , EXCLUDE_TARGET: "exclude-nothing"  , SOURCE_DATE_EPOCH: "1", SOURCE_DATE_EPOCH_TEX_PRIMITIVES: "1" }

    env: ${{ matrix.env }}

    steps:
      - uses: actions/checkout@v2
      - name: submodules-init
        uses: snickerbockers/submodules-init@v4
      - name: Install Build Deps
        run: |
          sudo apt-get -o Acquire::Retries=30 update -q
          sudo apt-get -o Acquire::Retries=30 install -y --allow-unauthenticated \
            texlive \
            texlive-latex-extra \
            texlive-bibtex-extra \
            texlive-generic-extra \
            texlive-science \
            texlive-luatex \
            texlive-lang-greek \
            lmodern \
            biber \
            gnuplot-nox \
            wget \
            curl \
            sed \
            grep \
            aspell \
            aspell-en \
            #
      - name: Setup Python
        uses: actions/setup-python@v2
      - name: install Python deps
        run: |
          pip install Pygments
      - run: make ubuntu-deps
      - run: make ${EXCLUDE_TARGET}
      - run: make OTHERFLAGS="-interaction=nonstopmode"
      - run: make full-todo
      - run: make todo.svg full-todo.svg
      - run: make deploy
      - name: list
        run: |
          find .
          git status
      - name: Deploy pdfs
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BRANCH: gh-pages
          FOLDER: deploy
          SINGLE_COMMIT: false
        if: github.ref == 'refs/heads/master' && ( github.event_name == 'push' || github.event_name == 'schedule' )
