% Encoding: UTF-8

@InProceedings{ReflectionTACS97,
  Title                    = {Using reflection to build efficient and certified decision procedures},
  Author                   = {Boutin, Samuel},
  Booktitle                = {Theoretical Aspects of Computer Software},
  Year                     = {1997},

  Address                  = {Berlin, Heidelberg},
  Editor                   = {Abadi, Mart{\'i}n and Ito, Takayasu},
  Pages                    = {515--529},
  Publisher                = {Springer Berlin Heidelberg},

  ISBN                     = {978-3-540-69530-1}
}

@InProceedings{reification-by-parametricity,
  author          = {Jason Gross and Andres Erbsen and Adam Chlipala},
  booktitle       = {Proceedings of the \href{https://itp2018.inria.fr/}{9th International Conference on Interactive Theorem Proving (ITP'18)}},
  date            = {2018-07},
  title           = {Reification by Parametricity: Fast Setup for Proof by Reflection, in Two Lines of {L}tac},
  url             = {https://people.csail.mit.edu/jgross/personal-website/papers/2018-reification-by-parametricity-itp-camera-ready.pdf},
  abstract        = {We present a new strategy for performing reification in Coq.
That is, we show how to generate first-class abstract syntax trees from ``native'' terms of Coq's logic, suitable as inputs to verified compilers or procedures in the \emph{proof-by-reflection} style.
Our new strategy, based on simple generalization of subterms as variables, is straightforward, short, and fast.
In its pure form, it is only complete for constants and function applications, but ``let'' binders, eliminators, lambdas, and quantifiers can be accommodated through lightweight coding conventions or preprocessing.

We survey the existing methods of reification across multiple Coq metaprogramming facilities, describing various design choices and tricks that can be used to speed them up, as well as various limitations.
We report benchmarking results for 18 variants, in addition to our own, finding that our own reification outperforms 16 of these methods in all cases, and one additional method in some cases; writing an OCaml plugin is the only method tested to be faster.
Our method is the most concise of the strategies we considered, reifying terms using only two to four lines of \texttt{Ltac}---beyond lists of the identifiers to reify and their reified variants.
Additionally, our strategy automatically provides error messages that are no less helpful than Coq's own error messages.},
  artifact-github = {https://github.com/mit-plv/reification-by-parametricity},
  artifact-tar-gz = {https://people.csail.mit.edu/jgross/personal-website/papers/2018-reification-by-parametricity-itp-camera-ready-supplementary.tar.gz},
  original-url    = {https://people.csail.mit.edu/jgross/personal-website/papers/2018-reification-by-parametricity-itp-draft.pdf},
  owner           = {Jason},
}

@InProceedings{FiatCryptoSP19,
  author    = {Andres Erbsen and Jade Philipoom and Jason Gross and Robert Sloan and Adam Chlipala},
  booktitle = {IEEE Security \& Privacy},
  date      = {2019-05},
  title     = {Simple High-Level Code For Cryptographic Arithmetic -- With Proofs, Without Compromises},
  location  = {San Francisco, CA, USA},
  url       = {http://adam.chlipala.net/papers/FiatCryptoSP19/},
}

@Misc{beta1-zeta1,
  author = {Jonathan Leivent},
  date   = {2016-01},
  title  = {[coqdev] beta1 and zeta1 reduction},
  url    = {https://sympa.inria.fr/sympa/arc/coqdev/2016-01/msg00060.html},
}

@Misc{coq-pr-fast-rel-lookup,
  author = {Pierre-Marie P\'edrot},
  date   = {2017-12},
  title  = {Fast rel lookup \#6506},
  url    = {https://github.com/coq/coq/pull/6506},
}

@Book{cpdt,
  author    = {Adam Chlipala},
  date      = {2013-12},
  title     = {Certified Programming with Dependent Types: A Pragmatic Introduction to the {C}oq Proof Assistant},
  isbn      = {9780262026659},
  publisher = {MIT Press},
  url       = {http://adam.chlipala.net/cpdt/},
}

@TechReport{gonthier2016small,
  author      = {Gonthier, Georges and Mahboubi, Assia and Tassi, Enrico},
  date        = {2016-11},
  institution = {Inria Saclay Ile de France},
  title       = {A Small Scale Reflection Extension for the {C}oq system},
  url         = {https://hal.inria.fr/inria-00258384/},
  school      = {Inria Saclay Ile de France},
}

@InProceedings{HOAS,
  author    = {Frank Pfenning and Conal Elliot},
  booktitle = {Proc. PLDI},
  date      = {1988},
  title     = {Higher-order abstract syntax},
  location  = {Atlanta, Georgia, United States},
  pages     = {199--208},
  url       = {https://www.cs.cmu.edu/~fp/papers/pldi88.pdf},
}

@Article{lessadhoc,
  author       = {Gonthier, Georges and Ziliani, Beta and Nanevski, Aleksandar and Dreyer, Derek},
  date         = {2013},
  journaltitle = {Journal of Functional Programming},
  title        = {How to Make Ad Hoc Proof Automation Less Ad Hoc},
  doi          = {10.1017/S0956796813000051},
  number       = {4},
  pages        = {357--401},
  url          = {https://people.mpi-sws.org/~beta/lessadhoc/lessadhoc-extended.pdf},
  volume       = {23},
  publisher    = {Cambridge University Press},
}

@InProceedings{MirrorShardITP14,
  author    = {Gregory Malecha and Adam Chlipala and Thomas Braibant},
  booktitle = {ITP'14: Proceedings of the 5th International Conference on Interactive Theorem Proving},
  date      = {2014},
  title     = {Compositional Computational Reflection},
  url       = {http://adam.chlipala.net/papers/MirrorShardITP14/},
}

@InProceedings{PhoasICFP08,
  author    = {Adam Chlipala},
  booktitle = {ICFP'08: Proceedings of the 13th ACM SIGPLAN International Conference on Functional Programming},
  date      = {2008-09},
  title     = {Parametric Higher-Order Abstract Syntax for Mechanized Semantics},
  location  = {Victoria, British Columbia, Canada},
  url       = {http://adam.chlipala.net/papers/PhoasICFP08/},
}

@InBook{primitive-projections,
  author    = {{Coq Development Team}},
  date      = {2017},
  title     = {The {C}oq Proof Assistant Reference Manual},
  chapter   = {2.1.1 Extensions of \texorpdfstring{\textsc{Gallina}}{Gallina}, Record Types (Primitive Projections)},
  edition   = {8.7.1},
  publisher = {INRIA},
  url       = {https://coq.inria.fr/distrib/V8.7.1/refman/gallina-ext.html#sec65},
}

@InBook{quote-plugin,
  author    = {{Coq Development Team}},
  date      = {2017},
  title     = {The {C}oq Proof Assistant Reference Manual},
  chapter   = {10.3 Detailed examples of tactics (quote)},
  edition   = {8.7.1},
  publisher = {INRIA},
  url       = {https://coq.inria.fr/distrib/V8.7.1/refman/tactic-examples.html#quote-examples},
}

@Article{sozeau2008first,
  author       = {Sozeau, Matthieu and Oury, Nicolas},
  date         = {2008},
  journaltitle = {Lecture Notes in Computer Science},
  title        = {First-class type classes},
  pages        = {278--293},
  url          = {https://www.irif.fr/~sozeau/research/publications/First-Class_Type_Classes.pdf},
  volume       = {5170},
  publisher    = {Springer},
}

@Article{ziliani2015mtac,
  author       = {Beta Ziliani and Derek Dreyer and Neelakantan R Krishnaswami and Aleksandar Nanevski and Viktor Vafeiadis},
  date         = {2015},
  journaltitle = {Journal of Functional Programming},
  title        = {Mtac: A Monad for Typed Tactic Programming in {C}oq},
  url          = {http://plv.mpi-sws.org/mtac/journal-draft.pdf},
  volume       = {25},
  publisher    = {Cambridge University Press},
}

@Article{ziliani2017comprehensible,
  author       = {Ziliani, Beta and Sozeau, Matthieu},
  date         = {2017},
  journaltitle = {Journal of Functional Programming},
  title        = {A Comprehensible Guide to a New Unifier for {CIC} Including Universe Polymorphism and Overloading},
  url          = {https://people.mpi-sws.org/~beta/papers/unicoq-journal.pdf},
  volume       = {27},
  publisher    = {Cambridge University Press},
}

@InProceedings{maranget2008compiling,
  author       = {Maranget, Luc},
  booktitle    = {Proceedings of the 2008 ACM SIGPLAN workshop on ML},
  date         = {2008},
  title        = {Compiling Pattern Matching to Good Decision Trees},
  organization = {ACM},
  pages        = {35--46},
  url          = {http://moscova.inria.fr/~maranget/papers/ml05e-maranget.pdf},
  owner        = {jgross},
  timestamp    = {2019.04.15},
}

@Misc{coq-pr-floats,
  author    = {Erik Martin-Dorel},
  date      = {2018-08},
  title     = {Implementing primitive floats (binary64 floating-point numbers) - Issue \#8276 - coq/coq},
  url       = {https://github.com/coq/coq/issues/8276},
  owner     = {jgross},
  timestamp = {2019.04.22},
}

@Article{Compcert,
  author       = {Leroy, Xavier},
  date         = {2009-12},
  journaltitle = {J. Autom. Reason.},
  title        = {A Formally Verified Compiler Back-end},
  issn         = {0168-7433},
  number       = {4},
  pages        = {363--446},
  url          = {http://gallium.inria.fr/~xleroy/publi/compcert-backend.pdf},
  volume       = {43},
  acmid        = {1666216},
  issue_date   = {December 2009},
  keywords     = {Compiler transformations and optimizations, Compiler verification, Formal methods, Program proof, Semantic preservation, The Coq theorem prover},
  location     = {Secaucus, NJ, USA},
  numpages     = {84},
  publisher    = {Springer-Verlag New York, Inc.},
}

@InProceedings{seL4SOSP09,
  author    = {Gerwin Klein and Kevin Elphinstone and Gernot Heiser and June Andronick and David Cock and Philip Derrin and Dhammika Elkaduwe and Kai Engelhardt and Rafal Kolanski and Michael Norrish and Thomas Sewell and Harvey Tuch and Simon Winwood},
  booktitle = {Proc. SOSP},
  date      = {2009},
  title     = {{seL4}: Formal Verification of an {OS} Kernel},
  pages     = {207--220},
  publisher = {ACM},
}

@Book{PartialEvaluation,
  author    = {N.D. Jones and C.K. Gomard and P. Sestoft},
  date      = {1993-06},
  title     = {Partial Evaluation and Automatic Program Generation},
  isbn      = {0-13-020249-5},
  publisher = {Prentice Hall International},
}

@Article{LMS,
  author       = {Tiark Rompf and Martin Odersky},
  date         = {2010},
  journaltitle = {Proceedings of GPCE},
  title        = {Lightweight modular staging: {A} pragmatic approach to runtime code generation and compiled {DSL}s},
  url          = {https://infoscience.epfl.ch/record/150347/files/gpce63-rompf.pdf},
}

@InProceedings{NbE,
  author    = {U. Berger and H. Schwichtenberg},
  booktitle = {[1991] Proceedings Sixth Annual IEEE Symposium on Logic in Computer Science},
  date      = {1991-07},
  title     = {An inverse of the evaluation functional for typed $\lambda$--calculus},
  doi       = {10.1109/LICS.1991.151645},
  pages     = {203--211},
  url       = {http://www.mathematik.uni-muenchen.de/~schwicht/papers/lics91/paper.pdf},
  keywords  = {formal logic;inverse;evaluation functional;typed lambda -calculus;typed lambda -terms;normalization algorithm;lambda -calculi;constants;natural deduction proofs;completeness theorem;recursive functions;Calculus;Arithmetic;Computer languages},
}

@InProceedings{Aehlig,
  author    = {Klaus Aehlig and Florian Haftmann and Tobias Nipkow},
  booktitle = {Proc. TPHOLs},
  date      = {2008},
  title     = {A Compiled Implementation of Normalization by Evaluation},
}

@InProceedings{CodeGen,
  author    = {Florian Haftmann and Tobias Nipkow},
  booktitle = {Proc. TPHOLs},
  date      = {2007},
  title     = {A Code Generator Framework for {I}sabelle/{HOL}},
}

@InProceedings{vale,
  author    = {Barry Bond and Chris Hawblitzel and Manos Kapritsos and Rustan Leino and Jay Lorch and Bryan Parno and Ashay Rane and Srinath Setty and Laure Thompson},
  booktitle = {Proc. USENIX Security},
  date      = {2017},
  title     = {Vale: Verifying High-Performance Cryptographic Assembly Code},
  url       = {http://www.cs.cornell.edu/~laurejt/papers/vale-2017.pdf},
}

@InProceedings{nativecompute,
  author    = {Mathieu Boespflug and Maxime Dénès and Benjamin Grégoire},
  booktitle = {Proc. CPP},
  date      = {2011},
  title     = {Full Reduction at Full Throttle},
}

@InProceedings{vmcompute,
  author    = {Benjamin Grégoire and Xavier Leroy},
  booktitle = {Proc. ICFP},
  date      = {2002},
  title     = {A compiled implementation of strong reduction},
}

@InProceedings{LMSVerify,
  author    = {Nada Amin and Tiark Rompf},
  booktitle = {Proc. POPL},
  date      = {2017},
  title     = {{LMS-Verify}: Abstraction without Regret for Verified Systems Programming},
}

@InProceedings{TemplateCoq,
  author    = {Abhishek Anand and Simon Boulier and Cyril Cohen and Matthieu Sozeau and Nicolas Tabareau},
  booktitle = {Proc. ITP},
  date      = {2018},
  title     = {Towards Certified Meta-Programming with Typed {Template-Coq}},
}

@InBook{rtac,
  author    = {Malecha, Gregory and Bengtson, Jesper},
  date      = {2016},
  title     = {Programming Languages and Systems: 25th European Symposium on Programming, ESOP 2016, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2016, Eindhoven, The Netherlands, April 2-8, 2016, Proceedings},
  chapter   = {Extensible and Efficient Automation Through Reflective Tactics},
  doi       = {10.1007/978-3-662-49498-1_21},
  editor    = {Thiemann, Peter},
  isbn      = {978-3-662-49498-1},
  location  = {Berlin, Heidelberg},
  pages     = {532--559},
  publisher = {Springer Berlin Heidelberg},
}

@Conference{denes2013prim-ints-arrays,
  author    = {Maxime D\'en\`es},
  title     = {Towards primitive data types for {C}OQ},
  booktitle = {The Coq Workshop 2013},
  year      = {2013},
  date      = {2013-04-06},
  subtitle  = {63-bits integers and persistent arrays},
  url       = {https://coq.inria.fr/files/coq5_submission_2.pdf},
}

@PhdThesis{malecha2015thesis,
  author      = {Gregory Michael Malecha},
  date        = {2014-11},
  institution = {Harvard University},
  title       = {Extensible Proof Engineering in Intensional Type Theory},
  url         = {http://gmalecha.github.io/publication/2015/02/01/extensible-proof-engineering-in-intensional-type-theory.html},
}

@InProceedings{debruijn1972,
  author       = {de Bruijn, Nicolaas Govert},
  booktitle    = {Indagationes Mathematicae (Proceedings)},
  date         = {1972},
  title        = {Lambda calculus notation with nameless dummies, a tool for automatic formula manipulation, with application to the {C}hurch-{R}osser theorem},
  doi          = {10.1016/1385-7258(72)90034-0},
  number       = {5},
  organization = {Elsevier},
  pages        = {381--392},
  url          = {http://www.sciencedirect.com/science/article/pii/1385725872900340},
  volume       = {75},
}

@Comment{jabref-meta: databaseType:biblatex;}
